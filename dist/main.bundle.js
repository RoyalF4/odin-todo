(()=>{"use strict";var e={92:(e,t,n)=>{n.d(t,{c:()=>s});var o=n(648),r=n.n(o),i=n(312),a=n.n(i)()(r());a.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const s=a},240:(e,t,n)=>{n.d(t,{c:()=>s});var o=n(648),r=n.n(o),i=n(312),a=n.n(i)()(r());a.push([e.id,"body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nbutton {\n    padding: 0;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebarItem {\n    display: flex;\n    height: 40px;\n}\n\n.sidebarItem > form {\n    display: flex;\n    align-items: center;\n}\n\n.sidebarItem > form > input {\n    box-sizing: border-box;\n    width: 150px;\n    height: 20px;\n}\n\n.sidebarItemBtn {\n    flex: 1;\n}\n\n.editButtons {\n    width: 50px;\n    display: flex;\n    align-items: center;\n}\n\n#sidebar button {\n    background: none;\n    border: none;\n}\n\n.sidebarItem:hover {\n    background: rgb(88, 28, 28);\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n}\n\n.projectDeleteBtn,\n.projectEditBtn {\n    padding: 0;\n    width: 25px;\n    height: 25px;\n}\n\n.projectDeleteImg,\n.projectEditImg {\n    width: 20px;\n}\n\n.projectDeleteImg:active,\n.projectEditImg:active {\n    transform: scale(.9);\n}\n\n.hidden {\n    display: none;\n}\n\n.active {\n    border-left: 10px solid green !important;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,gCAAgC;IAChC,6BAA6B;AACjC;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;IAEI,UAAU;IACV,WAAW;IACX,YAAY;AAChB;;AAEA;;IAEI,WAAW;AACf;;AAEA;;IAEI,oBAAoB;AACxB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,wCAAwC;AAC5C",sourcesContent:["body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nbutton {\n    padding: 0;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebarItem {\n    display: flex;\n    height: 40px;\n}\n\n.sidebarItem > form {\n    display: flex;\n    align-items: center;\n}\n\n.sidebarItem > form > input {\n    box-sizing: border-box;\n    width: 150px;\n    height: 20px;\n}\n\n.sidebarItemBtn {\n    flex: 1;\n}\n\n.editButtons {\n    width: 50px;\n    display: flex;\n    align-items: center;\n}\n\n#sidebar button {\n    background: none;\n    border: none;\n}\n\n.sidebarItem:hover {\n    background: rgb(88, 28, 28);\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n}\n\n.projectDeleteBtn,\n.projectEditBtn {\n    padding: 0;\n    width: 25px;\n    height: 25px;\n}\n\n.projectDeleteImg,\n.projectEditImg {\n    width: 20px;\n}\n\n.projectDeleteImg:active,\n.projectEditImg:active {\n    transform: scale(.9);\n}\n\n.hidden {\n    display: none;\n}\n\n.active {\n    border-left: 10px solid green !important;\n}\n"],sourceRoot:""}]);const s=a},312:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(a[d]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},648:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},596:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var d=e[s],c=o.base?d[0]+o.base:d[0],l=i[c]||0,A="".concat(c," ").concat(l);i[c]=l+1;var u=n(A),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,o);o.byIndex=s,t.splice(s,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=n(i[a]);t[s].references--}for(var d=o(e,r),c=0;c<i.length;c++){var l=n(i[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=d}}},176:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},808:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},120:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},520:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},936:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{_O:()=>z,Ut:()=>O,SC:()=>U,kR:()=>M,SG:()=>$});var e=n(596),t=n.n(e),r=n(520),i=n.n(r),a=n(176),s=n.n(a),d=n(120),c=n.n(d),l=n(808),A=n.n(l),u=n(936),p=n.n(u),m=n(92),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=A(),t()(m.c,h),m.c&&m.c.locals&&m.c.locals;var f=n(240),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=s().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=A(),t()(f.c,g),f.c&&f.c.locals&&f.c.locals;const b=class{constructor(e,t,n,o){this._title=e,this._description=t,this._dueDate=n,this._priority=o,this._completed=!1}toggleCompleted(){this._completed=!this._completed}isCompleted(){return this._completed}},C=class{constructor(e){this._title=e,this._todoList=[],this._id=crypto.randomUUID()}get title(){return this._title}set title(e){this._title=e}get id(){return this._id}addTodo(e){this._todoList.push(e)}},v={title:"Enter project title..."},y=!0;function I(){const e=S("dialog","addProjectModal"),t=S("form","addProjectForm"),n=function(e,t,n){const o=k("input");return o.type="text",o.name="title",o.placeholder=t,o.required=n,o}(0,v.title,y);t.addEventListener("submit",(e=>function(e){e.preventDefault();const t=new FormData(z),n=Object.fromEntries(t),o=new C(n.title);M.addProject(o),$.appendChild(j(o)),O.close(),z.reset()}(e)));const o=S("button","addProjectSubmit");o.textContent="Add",o.type="submit";const r=S("button","addProjectClose");r.textContent="Close",r.type="button",r.addEventListener("click",w),e.appendChild(t),t.appendChild(n),t.appendChild(o),t.appendChild(r),U.appendChild(e)}function B(e){x!=e&&(null!=x&&x.classList.toggle("active"),x=e,x.classList.toggle("active"))}let x;function j(e){const t=q("div","sidebarItem");t.id=`container-${e.id}`,t.dataset.uuid=e.id,null==x&&B(t);const n=q("button","sidebarItemBtn");n.id=`projectBtn-${e.id}`,n.textContent=e.title,n.addEventListener("click",(e=>function(e){B(e.target)}(e)));const o=q("div","editButtons"),r=L("projectDelete","../src/images/delete.svg");r.dataset.uuid=e.id,r.addEventListener("click",(e=>function(e){const t=null==e.target.type?e.target.parentElement.getAttribute("data-uuid"):e.target.getAttribute("data-uuid");console.log(t);const n=document.querySelector(`#container-${t}`);M.removeProject(t),n.remove()}(e)));const i=L("projectEdit","../src/images/edit.svg");return i.dataset.uuid=e.id,i.addEventListener("click",(e=>function(e){const t=null==e.target.type?e.target.parentElement.getAttribute("data-uuid"):e.target.getAttribute("data-uuid"),n=document.querySelector(`#input-${t}`);n.classList.toggle("hidden"),n.focus(),document.querySelector(`#projectBtn-${t}`).classList.toggle("hidden")}(e))),t.appendChild(function(e){const t=S("form",`form-${e.id}`);t.addEventListener("submit",(e=>function(e){e.preventDefault();const t=new FormData(e.target),n=Object.fromEntries(t).title,o=e.target.id.slice(5);M.renameProject(o,n);document.querySelector(`#projectBtn-${o}`).textContent=n;document.querySelector(`#input-${o}`).classList.toggle("hidden"),document.querySelector(`#projectBtn-${o}`).classList.toggle("hidden")}(e)));const n=S("input",`input-${e.id}`);return n.classList.add("hidden"),n.type="text",n.name="title",n.value=e.title,n.required=!0,t.appendChild(n),t}(e)),t.appendChild(n),o.appendChild(i),o.appendChild(r),t.appendChild(o),t}function E(){O.showModal()}function w(){O.close(),z.reset()}function k(e){return document.createElement(e)}function q(e,t){const n=k(e);return t instanceof Array?t.forEach((e=>n.classList.add(e))):n.classList.add(t),n}function S(e,t){const n=k(e);return n.id=t,n}function L(e,t){const n=q("button",`${e}Btn`);n.type="text";const o=q("img",`${e}Img`);return o.src=t,n.appendChild(o),n}const _=new b("todo1","this is todo1","02/21/1991","low"),P=new b("todo2","this is todo2","11/03/2000","high"),T=new b("todo3","this is todo3","12/24/2024","medium"),D=new C("Default");D.addTodo(_);const Y=new C("Project1");Y.addTodo(P),Y.addTodo(T);const M=new class{constructor(e=[]){this._list=e}get list(){return this._list}addProject(e){this._list.push(e)}renameProject(e,t){for(const n of this._list)e==n.id&&(n.title=t)}removeProject(e){for(const t of this._list)if(e==t.id){const e=this._list.indexOf(t);this._list.splice(e,1)}console.log(this._list)}}([D,Y]),U=document.querySelector("body");U.appendChild(function(){const e=k("header"),t=k("div");return t.textContent="Todo List",e.appendChild(t),e}()),U.appendChild(function(){const e=S("div","sidebar"),t=S("div","sidebarProjects");for(const e of M.list)t.appendChild(j(e));return e.appendChild(t),e.appendChild(function(){const e=S("button","addProjectButton");return e.textContent="Add Project",e.addEventListener("click",E),e}()),I(),e}()),U.appendChild(document.createElement("main")),document.querySelector("header");const $=document.querySelector("#sidebarProjects"),O=(document.querySelector("main"),document.querySelector("#addProjectModal")),z=document.querySelector("#addProjectForm")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,