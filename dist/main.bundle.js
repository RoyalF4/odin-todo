(()=>{"use strict";var t={92:(t,e,n)=>{n.d(e,{c:()=>a});var o=n(648),i=n.n(o),r=n(312),d=n.n(r)()(i());d.push([t.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const a=d},240:(t,e,n)=>{n.d(e,{c:()=>a});var o=n(648),i=n.n(o),r=n(312),d=n.n(r)()(i());d.push([t.id,"body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nbutton {\n    padding: 0;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebarItem {\n    display: flex;\n    height: 40px;\n    padding: 0 5px 0 0;\n}\n\n.sidebarItem > form {\n    display: flex;\n    align-items: center;\n}\n\n.sidebarItem > form > input {\n    box-sizing: border-box;\n    width: 145px;\n    height: 20px;\n}\n\n.sidebarItemBtn {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    flex: 1;\n    font-weight: inherit;\n    color: inherit;\n    padding: 0 0 0 10px;\n}\n\n.editButtons {\n    width: 50px;\n    display: flex;\n    align-items: center;\n}\n\n#sidebar button {\n    background: none;\n    border: none;\n}\n\n.sidebarItem:hover {\n    background: rgb(88, 28, 28);\n}\n\n.projectDeleteBtn,\n.projectEditBtn {\n    padding: 0;\n    width: 25px;\n    height: 25px;\n}\n\n.projectDeleteImg,\n.projectEditImg {\n    width: 20px;\n}\n\n.projectDeleteImg:active,\n.projectEditImg:active {\n    transform: scale(.9);\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n    padding: 10px;\n}\n\n#mainHeader {\n    width: 100%;\n    height: 50px;\n    background: black;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.hidden {\n    display: none;\n}\n\n.active {\n    color: white;\n    font-weight: bold;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,gCAAgC;IAChC,6BAA6B;AACjC;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,OAAO;IACP,oBAAoB;IACpB,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;;IAEI,UAAU;IACV,WAAW;IACX,YAAY;AAChB;;AAEA;;IAEI,WAAW;AACf;;AAEA;;IAEI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,iBAAiB;AACrB",sourcesContent:["body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nbutton {\n    padding: 0;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebarItem {\n    display: flex;\n    height: 40px;\n    padding: 0 5px 0 0;\n}\n\n.sidebarItem > form {\n    display: flex;\n    align-items: center;\n}\n\n.sidebarItem > form > input {\n    box-sizing: border-box;\n    width: 145px;\n    height: 20px;\n}\n\n.sidebarItemBtn {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    flex: 1;\n    font-weight: inherit;\n    color: inherit;\n    padding: 0 0 0 10px;\n}\n\n.editButtons {\n    width: 50px;\n    display: flex;\n    align-items: center;\n}\n\n#sidebar button {\n    background: none;\n    border: none;\n}\n\n.sidebarItem:hover {\n    background: rgb(88, 28, 28);\n}\n\n.projectDeleteBtn,\n.projectEditBtn {\n    padding: 0;\n    width: 25px;\n    height: 25px;\n}\n\n.projectDeleteImg,\n.projectEditImg {\n    width: 20px;\n}\n\n.projectDeleteImg:active,\n.projectEditImg:active {\n    transform: scale(.9);\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n    padding: 10px;\n}\n\n#mainHeader {\n    width: 100%;\n    height: 50px;\n    background: black;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.hidden {\n    display: none;\n}\n\n.active {\n    color: white;\n    font-weight: bold;\n}\n"],sourceRoot:""}]);const a=d},312:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(d[s]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);o&&d[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},648:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},596:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var r={},d=[],a=0;a<t.length;a++){var s=t[a],c=o.base?s[0]+o.base:s[0],l=r[c]||0,A="".concat(c," ").concat(l);r[c]=l+1;var u=n(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=i(p,o);o.byIndex=a,e.splice(a,0,{identifier:A,updater:h,references:1})}d.push(A)}return d}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var r=o(t=t||[],i=i||{});return function(t){t=t||[];for(var d=0;d<r.length;d++){var a=n(r[d]);e[a].references--}for(var s=o(t,i),c=0;c<r.length;c++){var l=n(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=s}}},176:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},808:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},120:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},520:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},936:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return t[o](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var o={};(()=>{n.d(o,{_O:()=>R,Ut:()=>F,SC:()=>z,Yt:()=>N,kR:()=>O,SG:()=>H});var t=n(596),e=n.n(t),i=n(520),r=n.n(i),d=n(176),a=n.n(d),s=n(120),c=n.n(s),l=n(808),A=n.n(l),u=n(936),p=n.n(u),h=n(92),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=A(),e()(h.c,f),h.c&&h.c.locals&&h.c.locals;var m=n(240),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=a().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=A(),e()(m.c,g),m.c&&m.c.locals&&m.c.locals;const C=class{constructor(t,e,n,o){this._title=t,this._description=e,this._dueDate=n,this._priority=o,this._completed=!1}get title(){return this._title}get description(){return this.description}get dueDate(){return this._dueDate}get priority(){return this._priority}get completed(){return this._completed}toggleCompleted(){this._completed=!this._completed}isCompleted(){return this._completed}},b=class{constructor(t){this._title=t,this._todoList=[],this._id=crypto.randomUUID()}get title(){return this._title}set title(t){this._title=t}get id(){return this._id}get todo(){return this._todoList}addTodo(t){this._todoList.push(t)}},v={title:"Enter project title..."},y=!0;function I(){const t=D("dialog","addProjectModal"),e=D("form","addProjectForm"),n=function(t,e,n){const o=L("input");return o.type="text",o.name="title",o.placeholder=e,o.required=n,o}(0,v.title,y);e.addEventListener("submit",(t=>function(t){t.preventDefault();const e=new FormData(R),n=Object.fromEntries(e),o=new b(n.title);0==O.list.length&&(document.querySelector("#mainHeader").textContent=n.title),O.addProject(o),H.appendChild(k(o)),F.close(),R.reset()}(t)));const o=D("button","addProjectSubmit");o.textContent="Add",o.type="submit";const i=D("button","addProjectClose");i.textContent="Close",i.type="button",i.addEventListener("click",S),t.appendChild(e),e.appendChild(n),e.appendChild(o),e.appendChild(i),z.appendChild(t)}function B(t){const e=D("div","todoContainer");for(const n of t){const t=P("div","todoContainer");t.textContent=n.title,e.appendChild(t)}return e}function x(t){const e=document.querySelector("#mainHeader"),n=document.querySelector("#todoContainer");if(w!=t){null!=w&&w.classList.toggle("active"),w=t;let o=t.id.slice(11);null!=e&&(e.textContent=O.getTitleWithId(o),n.textContent="",n.appendChild(B(O.getProjectWithId(o).todo))),w.classList.toggle("active")}}function j(){return w.id.slice(10)}let w,E;function k(t){const e=P("div","sidebarItem");e.id=`container-${t.id}`,e.dataset.uuid=t.id,null==w&&x(e);const n=P("button","sidebarItemBtn");n.id=`projectBtn-${t.id}`,n.textContent=t.title,n.addEventListener("click",(t=>function(t){x(t.target)}(t)));const o=P("div","editButtons"),i=Y("projectDelete","../src/images/delete.svg");i.dataset.uuid=t.id,i.addEventListener("click",(t=>function(t){const e=null==t.target.type?t.target.parentElement.getAttribute("data-uuid"):t.target.getAttribute("data-uuid");E=e,N.showModal()}(t)));const r=Y("projectEdit","../src/images/edit.svg");return r.dataset.uuid=t.id,r.addEventListener("click",(t=>function(t){const e=null==t.target.type?t.target.parentElement.getAttribute("data-uuid"):t.target.getAttribute("data-uuid"),n=document.querySelector(`#input-${e}`);n.classList.toggle("hidden"),n.focus(),document.querySelector(`#projectBtn-${e}`).classList.toggle("hidden")}(t))),e.appendChild(function(t){const e=D("form",`form-${t.id}`);e.addEventListener("submit",(t=>function(t){t.preventDefault();const e=new FormData(t.target),n=Object.fromEntries(e).title,o=t.target.id.slice(5);O.renameProject(o,n);document.querySelector(`#projectBtn-${o}`).textContent=n;document.querySelector(`#input-${o}`).classList.toggle("hidden"),document.querySelector(`#projectBtn-${o}`).classList.toggle("hidden")}(t)));const n=D("input",`input-${t.id}`);return n.classList.add("hidden"),n.type="text",n.name="title",n.value=t.title,n.required=!0,e.appendChild(n),e}(t)),e.appendChild(n),o.appendChild(r),o.appendChild(i),e.appendChild(o),e}function q(){F.showModal()}function S(){F.close(),R.reset()}function _(){N.close()}function L(t){return document.createElement(t)}function P(t,e){const n=L(t);return e instanceof Array?e.forEach((t=>n.classList.add(t))):n.classList.add(e),n}function D(t,e){const n=L(t);return n.id=e,n}function Y(t,e){const n=P("button",`${t}Btn`);n.type="text";const o=P("img",`${t}Img`);return o.src=e,n.appendChild(o),n}const T=new C("todo1","this is todo1","02/21/1991","low"),W=new C("todo2","this is todo2","11/03/2000","high"),M=new C("todo3","this is todo3","12/24/2024","medium"),U=new b("Default");U.addTodo(T);const $=new b("Project1");$.addTodo(W),$.addTodo(M);const O=new class{constructor(t=[]){this._list=t}get list(){return this._list}addProject(t){this._list.push(t)}renameProject(t,e){for(const n of this._list)t==n.id&&(n.title=e)}removeProject(t){for(const e of this._list)if(t==e.id){const t=this._list.indexOf(e);this._list.splice(t,1)}}getTitleWithId(t){for(const e of this._list)if(t==e.id)return e.title;console.log("id not found")}getProjectWithId(t){for(const e of this._list)if(t==e.id)return e;console.log("did not find id")}}([U,$]),z=document.querySelector("body");z.appendChild(function(){const t=L("header"),e=L("div");return e.textContent="Todo List",t.appendChild(e),t}()),z.appendChild(function(){const t=D("div","sidebar"),e=D("div","sidebarProjects");for(const t of O.list)e.appendChild(k(t));return t.appendChild(e),t.appendChild(function(){const t=D("button","addProjectButton");return t.textContent="Add Project",t.addEventListener("click",q),t}()),I(),function(){const t=D("dialog","deleteConfirmDialog"),e=D("form","deleteConfirmForm");e.addEventListener("submit",(t=>function(t){t.preventDefault();const e=document.querySelector(`#container-${E}`);O.removeProject(E),e.remove(),(0==O.list.length||E==j())&&(document.querySelector("#mainHeader").textContent=""),N.close()}(t)));const n=L("div");n.textContent="Are you sure you want to delete your project?";const o=L("div"),i=D("button","deleteProjectSubmit");i.textContent="Yes",i.type="submit";const r=D("button","deleteProjectClose");r.textContent="No",r.type="button",r.addEventListener("click",_),t.appendChild(e),e.appendChild(n),o.appendChild(i),o.appendChild(r),e.appendChild(o),z.appendChild(t)}(),t}()),z.appendChild(function(){const t=L("main");return t.appendChild(function(){const t=D("div","mainHeader");return t.textContent=O.getTitleWithId(w.getAttribute("data-uuid")),t}()),t.appendChild(B(O.getProjectWithId(j()).todo)),t}()),document.querySelector("header");const H=document.querySelector("#sidebarProjects"),F=(document.querySelector("main"),document.querySelector("#addProjectModal")),R=document.querySelector("#addProjectForm"),N=document.querySelector("#deleteConfirmDialog")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,