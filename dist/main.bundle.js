(()=>{"use strict";var e={92:(e,t,n)=>{n.d(t,{c:()=>s});var o=n(648),r=n.n(o),i=n(312),a=n.n(i)()(r());a.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const s=a},240:(e,t,n)=>{n.d(t,{c:()=>s});var o=n(648),r=n.n(o),i=n(312),a=n.n(i)()(r());a.push([e.id,"body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n}\n\n#projectDeleteImg,\n#projectEditImg {\n    width: 20px;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,gCAAgC;IAChC,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;IAEI,WAAW;AACf",sourcesContent:["body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n}\n\n#projectDeleteImg,\n#projectEditImg {\n    width: 20px;\n}\n"],sourceRoot:""}]);const s=a},312:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},648:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},596:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],d=o.base?c[0]+o.base:c[0],l=i[d]||0,u="".concat(d," ").concat(l);i[d]=l+1;var p=n(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var f=r(A,o);o.byIndex=s,t.splice(s,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=n(i[a]);t[s].references--}for(var c=o(e,r),d=0;d<i.length;d++){var l=n(i[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},176:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},808:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},120:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},520:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},936:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{_O:()=>U,Ut:()=>R,SC:()=>D,kR:()=>M,SG:()=>O});var e=n(596),t=n.n(e),r=n(520),i=n.n(r),a=n(176),s=n.n(a),c=n(120),d=n.n(c),l=n(808),u=n.n(l),p=n(936),A=n.n(p),f=n(92),h={};h.styleTagTransform=A(),h.setAttributes=d(),h.insert=s().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=u(),t()(f.c,h),f.c&&f.c.locals&&f.c.locals;var m=n(240),b={};b.styleTagTransform=A(),b.setAttributes=d(),b.insert=s().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=u(),t()(m.c,b),m.c&&m.c.locals&&m.c.locals;const C=class{constructor(e,t,n,o){this._title=e,this._description=t,this._dueDate=n,this._priority=o,this._completed=!1}toggleCompleted(){this._completed=!this._completed}isCompleted(){return this._completed}},g=class{constructor(e){this._title=e,this._todoList=[]}get title(){return this._title}set title(e){this._title=e}addTodo(e){this._todoList.push(e)}};function v(e){return document.createElement(e)}function y(e,t){const n=v(e);return t instanceof Array?t.forEach((e=>n.classList.add(e))):n.classList.add(t),n}function I(e,t){const n=v(e);return n.id=t,n}function B(e,t){const n=I("button",`${e}Btn`),o=I("img",`${e}Img`);return o.src=t,n.appendChild(o),n}function j(){R.showModal()}function w(){R.close(),U.reset()}const x={title:"Enter project title..."},k=!0;function q(){const e=I("dialog","addProjectModal"),t=I("form","addProjectForm"),n=function(e,t,n){const o=v("input");return o.type="text",o.name="title",o.placeholder=t,o.required=n,o}(0,x.title,k);t.addEventListener("submit",(e=>function(e){e.preventDefault();const t=new FormData(U),n=Object.fromEntries(t),o=new g(n.title);M.addProject(o),O.appendChild(E(o)),R.close(),U.reset()}(e)));const o=I("button","addProjectSubmit");o.textContent="Add",o.type="submit";const r=I("button","addProjectClose");r.textContent="Close",r.type="button",r.addEventListener("click",w),e.appendChild(t),t.appendChild(n),t.appendChild(o),t.appendChild(r),D.appendChild(e)}function E(e){const t=y("div","sidebarItem"),n=y("button","sidebarItemBtn");n.textContent=e.title;const o=B("projectDelete","../src/images/delete.svg"),r=B("projectEdit","../src/images/edit.svg");return t.appendChild(n),t.appendChild(o),t.appendChild(r),t}const S=new C("todo1","this is todo1","02/21/1991","low"),T=new C("todo2","this is todo2","11/03/2000","high"),_=new C("todo3","this is todo3","12/24/2024","medium"),P=new g("Default");P.addTodo(S);const L=new g("Project1");L.addTodo(T),L.addTodo(_);const M=new class{constructor(e=[]){this._list=e}get list(){return this._list}addProject(e){this._list.push(e)}}([P,L]),D=document.querySelector("body");D.appendChild(function(){const e=v("header"),t=v("div");return t.textContent="Todo List",e.appendChild(t),e}()),D.appendChild(function(){const e=I("div","sidebar"),t=I("div","sidebarProjects");for(const e of M.list)t.appendChild(E(e));return e.appendChild(t),e.appendChild(function(){const e=I("button","addProjectButton");return e.textContent="Add Project",e.addEventListener("click",j),e}()),q(),e}()),D.appendChild(document.createElement("main")),document.querySelector("header");const O=document.querySelector("#sidebarProjects"),R=(document.querySelector("main"),document.querySelector("#addProjectModal")),U=document.querySelector("#addProjectForm")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,