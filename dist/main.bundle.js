(()=>{"use strict";var t={92:(t,n,e)=>{e.d(n,{c:()=>a});var o=e(648),i=e.n(o),r=e(312),d=e.n(r)()(i());d.push([t.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const a=d},240:(t,n,e)=>{e.d(n,{c:()=>a});var o=e(648),i=e.n(o),r=e(312),d=e.n(r)()(i());d.push([t.id,"body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nbutton {\n    padding: 0;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebarItem {\n    display: flex;\n    height: 40px;\n    padding: 0 5px 0 0;\n}\n\n.sidebarItem > form {\n    display: flex;\n    align-items: center;\n}\n\n.sidebarItem > form > input {\n    box-sizing: border-box;\n    width: 145px;\n    height: 20px;\n}\n\n.sidebarItemBtn {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    flex: 1;\n    font-weight: inherit;\n    color: inherit;\n    padding: 0 0 0 10px;\n}\n\n.editButtons {\n    width: 50px;\n    display: flex;\n    align-items: center;\n}\n\n#sidebar button {\n    background: none;\n    border: none;\n}\n\n.sidebarItem:hover {\n    background: rgb(88, 28, 28);\n}\n\n.projectDeleteBtn,\n.projectEditBtn {\n    padding: 0;\n    width: 25px;\n    height: 25px;\n}\n\n.projectDeleteImg,\n.projectEditImg {\n    width: 20px;\n}\n\n.projectDeleteImg:active,\n.projectEditImg:active {\n    transform: scale(.9);\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n    padding: 10px;\n}\n\n#mainHeader {\n    width: 100%;\n    height: 50px;\n    background: black;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2rem;\n    font-weight: bold;\n    margin: 0 0 10px 0;\n}\n\n#todoContainer {\n    margin: 10px 0 0 0;\n}\n\n\n\n.todoContainer {\n    display: flex;\n    background: white;\n    height: 50px;\n    align-items: center;\n    padding: 0 10px 0 0;\n    margin: 0 0 10px 0;\n}\n\n.todoDueDate {\n    flex: 1;\n    text-align: center;\n}\n\n.todoEditImg,\n.todoDeleteImg {\n    width: 20px;\n}\n\n.todoEditImg:active,\n.todoDeleteImg:active {\n    transform: scale(.9);\n}\n\n.todoEditBtn,\n.todoDeleteBtn {\n    background: none;\n    border: none;\n    width: 25px;\n    height: 25px;\n}\n\n.bulletIcon {\n    width: 50px;\n    filter: invert(60%) sepia(93%) saturate(3087%) hue-rotate(81deg) brightness(118%) contrast(120%);\n}\n\n.hidden {\n    display: none;\n}\n\n.active {\n    color: white;\n    font-weight: bold;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,gCAAgC;IAChC,6BAA6B;AACjC;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,OAAO;IACP,oBAAoB;IACpB,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;;IAEI,UAAU;IACV,WAAW;IACX,YAAY;AAChB;;AAEA;;IAEI,WAAW;AACf;;AAEA;;IAEI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;;;AAIA;IACI,aAAa;IACb,iBAAiB;IACjB,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,OAAO;IACP,kBAAkB;AACtB;;AAEA;;IAEI,WAAW;AACf;;AAEA;;IAEI,oBAAoB;AACxB;;AAEA;;IAEI,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,gGAAgG;AACpG;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,iBAAiB;AACrB",sourcesContent:["body {\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 100px 1fr;\n}\n\nbutton {\n    padding: 0;\n}\n\nheader {\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    grid-column: span 2;\n    background: black;\n    color: white;\n}\n\n#sidebar {\n    width: 200px;\n    height: 100vh;\n    background: gray;\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebarItem {\n    display: flex;\n    height: 40px;\n    padding: 0 5px 0 0;\n}\n\n.sidebarItem > form {\n    display: flex;\n    align-items: center;\n}\n\n.sidebarItem > form > input {\n    box-sizing: border-box;\n    width: 145px;\n    height: 20px;\n}\n\n.sidebarItemBtn {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    flex: 1;\n    font-weight: inherit;\n    color: inherit;\n    padding: 0 0 0 10px;\n}\n\n.editButtons {\n    width: 50px;\n    display: flex;\n    align-items: center;\n}\n\n#sidebar button {\n    background: none;\n    border: none;\n}\n\n.sidebarItem:hover {\n    background: rgb(88, 28, 28);\n}\n\n.projectDeleteBtn,\n.projectEditBtn {\n    padding: 0;\n    width: 25px;\n    height: 25px;\n}\n\n.projectDeleteImg,\n.projectEditImg {\n    width: 20px;\n}\n\n.projectDeleteImg:active,\n.projectEditImg:active {\n    transform: scale(.9);\n}\n\nmain {\n    height: 100vh;\n    background: lightgreen;\n    padding: 10px;\n}\n\n#mainHeader {\n    width: 100%;\n    height: 50px;\n    background: black;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2rem;\n    font-weight: bold;\n    margin: 0 0 10px 0;\n}\n\n#todoContainer {\n    margin: 10px 0 0 0;\n}\n\n\n\n.todoContainer {\n    display: flex;\n    background: white;\n    height: 50px;\n    align-items: center;\n    padding: 0 10px 0 0;\n    margin: 0 0 10px 0;\n}\n\n.todoDueDate {\n    flex: 1;\n    text-align: center;\n}\n\n.todoEditImg,\n.todoDeleteImg {\n    width: 20px;\n}\n\n.todoEditImg:active,\n.todoDeleteImg:active {\n    transform: scale(.9);\n}\n\n.todoEditBtn,\n.todoDeleteBtn {\n    background: none;\n    border: none;\n    width: 25px;\n    height: 25px;\n}\n\n.bulletIcon {\n    width: 50px;\n    filter: invert(60%) sepia(93%) saturate(3087%) hue-rotate(81deg) brightness(118%) contrast(120%);\n}\n\n.hidden {\n    display: none;\n}\n\n.active {\n    color: white;\n    font-weight: bold;\n}\n"],sourceRoot:""}]);const a=d},312:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(d[s]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);o&&d[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),n.push(l))}},n}},648:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},596:t=>{var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var r={},d=[],a=0;a<t.length;a++){var s=t[a],c=o.base?s[0]+o.base:s[0],l=r[c]||0,A="".concat(c," ").concat(l);r[c]=l+1;var u=e(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=i(p,o);o.byIndex=a,n.splice(a,0,{identifier:A,updater:h,references:1})}d.push(A)}return d}function i(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,i){var r=o(t=t||[],i=i||{});return function(t){t=t||[];for(var d=0;d<r.length;d++){var a=e(r[d]);n[a].references--}for(var s=o(t,i),c=0;c<r.length;c++){var l=e(r[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=s}}},176:t=>{var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},808:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},120:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},520:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,i&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},936:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={id:o,exports:{}};return t[o](r,r.exports,e),r.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0;var o={};(()=>{e.d(o,{_O:()=>R,Ut:()=>F,SC:()=>N,Yt:()=>X,kR:()=>H,SG:()=>Z});var t=e(596),n=e.n(t),i=e(520),r=e.n(i),d=e(176),a=e.n(d),s=e(120),c=e.n(s),l=e(808),A=e.n(l),u=e(936),p=e.n(u),h=e(92),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),n()(h.c,m),h.c&&h.c.locals&&h.c.locals;var g=e(240),f={};function C(){return crypto.randomUUID()}f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=A(),n()(g.c,f),g.c&&g.c.locals&&g.c.locals;const b=class{constructor(t,n,e,o){this._title=t,this._description=n,this._dueDate=e,this._priority=o,this._completed=!1,this._id=C()}get title(){return this._title}get description(){return this.description}get dueDate(){return this._dueDate}get priority(){return this._priority}get completed(){return this._completed}get id(){return this._id}toggleCompleted(){this._completed=!this._completed}isCompleted(){return this._completed}},I=class{constructor(t){this._title=t,this._list=[],this._id=C()}get title(){return this._title}set title(t){this._title=t}get id(){return this._id}get todo(){return this._list}addTodo(t){this._list.push(t)}removeTodo(t){for(const n of this._list)if(t==n.id){const t=this._list.indexOf(n);this._list.splice(t,1)}}},B={title:"Enter project title..."},v=!0;function y(){const t=T("dialog","addProjectModal"),n=T("form","addProjectForm"),e=function(t,n,e){const o=Y("input");return o.type="text",o.name="title",o.placeholder=n,o.required=e,o}(0,B.title,v);n.addEventListener("submit",(t=>function(t){t.preventDefault();const n=new FormData(R),e=Object.fromEntries(n),o=new I(e.title);0==H.list.length&&(document.querySelector("#mainHeader").textContent=e.title),H.addProject(o),Z.appendChild(q(o)),F.close(),R.reset()}(t)));const o=T("button","addProjectSubmit");o.textContent="Add",o.type="submit";const i=T("button","addProjectClose");i.textContent="Close",i.type="button",i.addEventListener("click",S),t.appendChild(n),n.appendChild(e),n.appendChild(o),n.appendChild(i),N.appendChild(t)}function x(t){const n=L("div","todosContainer");for(const e of t)n.appendChild(E(e));return n}function E(t){const n=L("div","todoContainer");n.id=t.id;const e=L("img","bulletIcon");e.src="../src/images/bullet.svg";const o=L("div","todoTitle");o.textContent=t.title;const i=L("div","todoDueDate");i.textContent=`Due: ${t.dueDate}`;const r=W("todoEdit","../src/images/edit.svg"),d=W("todoDelete","../src/images/delete.svg");return d.addEventListener("click",(t=>function(t){let n=t.target.parentElement,e=k.getAttribute("data-uuid");"DIV"!=n.nodeName&&(n=n.parentElement),H.getProjectWithId(e).removeTodo(n.id),n.remove()}(t))),function(t,n){for(const e of n)t.appendChild(e);return t}(n,[e,o,i,r,d])}function j(t){const n=document.querySelector("#mainHeader"),e=document.querySelector(".todosContainer");if(k!=t){null!=k&&k.classList.toggle("active"),k=t;let o=t.id.replace("container-","").replace("projectBtn-","");null!=n&&(n.textContent=H.getTitleWithId(o),e.textContent="",e.appendChild(x(H.getProjectWithId(o).todo))),k.classList.toggle("active")}}function w(){return k.id.slice(10)}let k,D;function q(t){const n=L("div","sidebarItem");n.id=`container-${t.id}`,n.dataset.uuid=t.id,null==k&&j(n);const e=L("button","sidebarItemBtn");e.id=`projectBtn-${t.id}`,e.textContent=t.title,e.addEventListener("click",(t=>function(t){j(t.target.parentElement)}(t)));const o=L("div","editButtons"),i=W("projectDelete","../src/images/delete.svg");i.dataset.uuid=t.id,i.addEventListener("click",(t=>function(t){const n=null==t.target.type?t.target.parentElement.getAttribute("data-uuid"):t.target.getAttribute("data-uuid");D=n,X.showModal()}(t)));const r=W("projectEdit","../src/images/edit.svg");return r.dataset.uuid=t.id,r.addEventListener("click",(t=>function(t){const n=null==t.target.type?t.target.parentElement.getAttribute("data-uuid"):t.target.getAttribute("data-uuid"),e=document.querySelector(`#input-${n}`);e.classList.toggle("hidden"),e.focus(),document.querySelector(`#projectBtn-${n}`).classList.toggle("hidden")}(t))),n.appendChild(function(t){const n=T("form",`form-${t.id}`);n.addEventListener("submit",(t=>function(t){t.preventDefault();const n=new FormData(t.target),e=Object.fromEntries(n).title,o=t.target.id.slice(5);H.renameProject(o,e);document.querySelector(`#projectBtn-${o}`).textContent=e;document.querySelector(`#input-${o}`).classList.toggle("hidden"),document.querySelector(`#projectBtn-${o}`).classList.toggle("hidden")}(t)));const e=T("input",`input-${t.id}`);return e.classList.add("hidden"),e.type="text",e.name="title",e.value=t.title,e.required=!0,n.appendChild(e),n}(t)),n.appendChild(e),o.appendChild(r),o.appendChild(i),n.appendChild(o),n}function _(){F.showModal()}function S(){F.close(),R.reset()}function P(){X.close()}function Y(t){return document.createElement(t)}function L(t,n){const e=Y(t);return n instanceof Array?n.forEach((t=>e.classList.add(t))):e.classList.add(n),e}function T(t,n){const e=Y(t);return e.id=n,e}function W(t,n){const e=L("button",`${t}Btn`);e.type="text";const o=L("img",`${t}Img`);return o.src=n,e.appendChild(o),e}const M=new b("todo1","this is todo1","02/21/1991","low"),O=new b("todo2","this is todo2","11/03/2000","high"),U=new b("todo3","this is todo3","12/24/2024","medium"),$=new I("Default");$.addTodo(M);const z=new I("Project1");z.addTodo(O),z.addTodo(U);const H=new class{constructor(t=[]){this._list=t}get list(){return this._list}addProject(t){this._list.push(t)}renameProject(t,n){for(const e of this._list)t==e.id&&(e.title=n)}removeProject(t){for(const n of this._list)if(t==n.id){const t=this._list.indexOf(n);this._list.splice(t,1)}}getTitleWithId(t){for(const n of this._list)if(t==n.id)return n.title;console.log("id not found")}getProjectWithId(t){for(const n of this._list)if(t==n.id)return n;console.log("did not find id")}}([$,z]),N=document.querySelector("body");N.appendChild(function(){const t=Y("header"),n=Y("div");return n.textContent="Todo List",t.appendChild(n),t}()),N.appendChild(function(){const t=T("div","sidebar"),n=T("div","sidebarProjects");for(const t of H.list)n.appendChild(q(t));return t.appendChild(n),t.appendChild(function(){const t=T("button","addProjectButton");return t.textContent="Add Project",t.addEventListener("click",_),t}()),y(),function(){const t=T("dialog","deleteConfirmDialog"),n=T("form","deleteConfirmForm");n.addEventListener("submit",(t=>function(t){t.preventDefault();const n=document.querySelector(`#container-${D}`);H.removeProject(D),n.remove();const e=document.querySelector(".todosContainer");console.log(e),w()==D&&(e.textContent=""),0!=H.list.length&&D!=w()||(document.querySelector("#mainHeader").textContent="No Project Selected"),X.close()}(t)));const e=Y("div");e.textContent="Are you sure you want to delete your project?";const o=Y("div"),i=T("button","deleteProjectSubmit");i.textContent="Yes",i.type="submit";const r=T("button","deleteProjectClose");r.textContent="No",r.type="button",r.addEventListener("click",P),t.appendChild(n),n.appendChild(e),o.appendChild(i),o.appendChild(r),n.appendChild(o),N.appendChild(t)}(),t}()),N.appendChild(function(){const t=Y("main");return t.appendChild(function(){const t=T("div","mainHeader");return t.textContent=H.getTitleWithId(k.getAttribute("data-uuid")),t}()),t.appendChild(x(H.getProjectWithId(w()).todo)),t}()),document.querySelector("header");const Z=document.querySelector("#sidebarProjects"),F=(document.querySelector("main"),document.querySelector("#addProjectModal")),R=document.querySelector("#addProjectForm"),X=document.querySelector("#deleteConfirmDialog")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,